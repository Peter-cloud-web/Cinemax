// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.view.ui.viewmodels;

import com.example.domain.MovieRepository;
import com.example.service.MovieApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieViewModel_Factory implements Factory<MovieViewModel> {
  private final Provider<MovieApi> apiProvider;

  private final Provider<MovieRepository> repositoryProvider;

  public MovieViewModel_Factory(Provider<MovieApi> apiProvider,
      Provider<MovieRepository> repositoryProvider) {
    this.apiProvider = apiProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MovieViewModel get() {
    return newInstance(apiProvider.get(), repositoryProvider.get());
  }

  public static MovieViewModel_Factory create(Provider<MovieApi> apiProvider,
      Provider<MovieRepository> repositoryProvider) {
    return new MovieViewModel_Factory(apiProvider, repositoryProvider);
  }

  public static MovieViewModel newInstance(MovieApi api, MovieRepository repository) {
    return new MovieViewModel(api, repository);
  }
}
