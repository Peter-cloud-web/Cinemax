// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.view.ui.viewmodels.favouriteMoviesViewModel;

import com.example.domain.use_cases.favouritemovies_usecase.DeleteMovieUseCase;
import com.example.domain.use_cases.favouritemovies_usecase.GetFavouriteMovieUseCase;
import com.example.domain.use_cases.favouritemovies_usecase.InsertFavouriteMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FavouriteMoviesViewModel_Factory implements Factory<FavouriteMoviesViewModel> {
  private final Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider;

  private final Provider<InsertFavouriteMoviesUseCase> insertFavouriteMoviesUseCaseProvider;

  private final Provider<DeleteMovieUseCase> deleteMovieUseCaseProvider;

  public FavouriteMoviesViewModel_Factory(
      Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider,
      Provider<InsertFavouriteMoviesUseCase> insertFavouriteMoviesUseCaseProvider,
      Provider<DeleteMovieUseCase> deleteMovieUseCaseProvider) {
    this.favouriteMovieUseCaseProvider = favouriteMovieUseCaseProvider;
    this.insertFavouriteMoviesUseCaseProvider = insertFavouriteMoviesUseCaseProvider;
    this.deleteMovieUseCaseProvider = deleteMovieUseCaseProvider;
  }

  @Override
  public FavouriteMoviesViewModel get() {
    return newInstance(favouriteMovieUseCaseProvider.get(), insertFavouriteMoviesUseCaseProvider.get(), deleteMovieUseCaseProvider.get());
  }

  public static FavouriteMoviesViewModel_Factory create(
      Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider,
      Provider<InsertFavouriteMoviesUseCase> insertFavouriteMoviesUseCaseProvider,
      Provider<DeleteMovieUseCase> deleteMovieUseCaseProvider) {
    return new FavouriteMoviesViewModel_Factory(favouriteMovieUseCaseProvider, insertFavouriteMoviesUseCaseProvider, deleteMovieUseCaseProvider);
  }

  public static FavouriteMoviesViewModel newInstance(GetFavouriteMovieUseCase favouriteMovieUseCase,
      InsertFavouriteMoviesUseCase insertFavouriteMoviesUseCase,
      DeleteMovieUseCase deleteMovieUseCase) {
    return new FavouriteMoviesViewModel(favouriteMovieUseCase, insertFavouriteMoviesUseCase, deleteMovieUseCase);
  }
}
