// Generated by view binder compiler. Do not edit!
package com.example.cinemaxv3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cinemaxv3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchMoviesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView aboutMovie;

  @NonNull
  public final ConstraintLayout cardView;

  @NonNull
  public final ImageView imageMovies;

  @NonNull
  public final TextView movieTitile;

  @NonNull
  public final TextView ratingMovie;

  @NonNull
  public final View view;

  private ItemSearchMoviesBinding(@NonNull ConstraintLayout rootView, @NonNull TextView aboutMovie,
      @NonNull ConstraintLayout cardView, @NonNull ImageView imageMovies,
      @NonNull TextView movieTitile, @NonNull TextView ratingMovie, @NonNull View view) {
    this.rootView = rootView;
    this.aboutMovie = aboutMovie;
    this.cardView = cardView;
    this.imageMovies = imageMovies;
    this.movieTitile = movieTitile;
    this.ratingMovie = ratingMovie;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchMoviesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchMoviesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search_movies, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchMoviesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutMovie;
      TextView aboutMovie = ViewBindings.findChildViewById(rootView, id);
      if (aboutMovie == null) {
        break missingId;
      }

      ConstraintLayout cardView = (ConstraintLayout) rootView;

      id = R.id.image_movies;
      ImageView imageMovies = ViewBindings.findChildViewById(rootView, id);
      if (imageMovies == null) {
        break missingId;
      }

      id = R.id.movieTitile;
      TextView movieTitile = ViewBindings.findChildViewById(rootView, id);
      if (movieTitile == null) {
        break missingId;
      }

      id = R.id.ratingMovie;
      TextView ratingMovie = ViewBindings.findChildViewById(rootView, id);
      if (ratingMovie == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ItemSearchMoviesBinding((ConstraintLayout) rootView, aboutMovie, cardView,
          imageMovies, movieTitile, ratingMovie, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
