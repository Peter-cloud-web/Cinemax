plugins {
    id("com.android.library")
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'com.example.data'
    compileSdk 33

    defaultConfig {
        buildConfigField "String", "MOVIE_API_KEY", localProperties['movie_access_key']
    }

    defaultConfig {
//        applicationId "com.example.data"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false

            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation implementation(project(':domain',))

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //    Leak canary
    implementation "com.squareup.leakcanary:leakcanary-android:2.12"

    //dagger-hilt
    implementation "com.google.dagger:hilt-android:2.47"
    kapt "com.google.dagger:hilt-android-compiler:2.47"

    implementation("androidx.room:room-runtime:2.5.2")
    annotationProcessor("androidx.room:room-compiler:2.5.2")

    //WorkManager
    implementation "androidx.work:work-runtime:2.9.0"


    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.5.2")
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.5.2")

    // optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:2.5.2")

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:2.5.2")

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:2.5.2")

    //Paging
    implementation "androidx.paging:paging-runtime:3.1.1"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"


    implementation("io.coil-kt:coil:2.4.0")

    implementation "androidx.room:room-paging:2.5.2"

    //Ktor dependencies
    def ktor_version = '1.6.4'
    implementation "io.ktor:ktor-client-core:$ktor_version"

// HTTP engine: The HTTP client used to perform network requests.

    implementation "io.ktor:ktor-client-android:$ktor_version"

// The serialization engine used to convert objects to and from JSON.
    implementation "io.ktor:ktor-client-serialization:$ktor_version"

// Logging
    implementation "io.ktor:ktor-client-logging:$ktor_version"

    def serialization_version = '1.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

//    mockWebServer:
    implementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2'

//    coroutinesTest:
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'

//    truth:
    testImplementation 'com.google.truth:truth:1.1.5'

}

kapt{
    correctErrorTypes = true
    'io.coil-kt:coil-compiler:1.4.0'
}

